// ---------------------------------------------------------------------------
// Padding Mixins

// add empty colums as padding before an element.
// $columns : The number of columns to prefix.
// $context : [optional] The context (columns spanned by parent).
//          : Context is required on any nested elements.
//          : Context MUST NOT be declared on a root element.
// $from    : The start direction of your layout (e.g. 'left' for ltr languages)
// $style   : The container style to use.
prefix(_columns, context = $total-columns, from = $from-direction, style = $container-style)
  from = unquote(from)
  padding-{from}: space(_columns, context, style)

// add empty colums as padding after an element.
// $columns : The number of columns to suffix.
// $context : [optional] The context (columns spanned by parent).
//          : Context is required on any nested elements.
//          : Context MUST NOT be declared on a root element.
// $from    : The start direction of your layout (e.g. 'left' for ltr languages)
// $style   : The container style to use.
suffix(_columns, context = $total-columns, from = $from-direction, style = $container-style)
  from = unquote(from)
  to = opposite-position(from)
  padding-{to}: space(_columns, context, style)

// add empty colums as padding before and after an element.
// $columns : The number of columns to pad.
// $context : [optional] The context (columns spanned by parent).
//          : Context is required on any nested elements.
//          : Context MUST NOT be declared on a root element.
// $from    : The start direction of your layout (e.g. 'left' for ltr languages)
// $style   : The container style to use.
pad(_prefix = false, _suffix = false, context = $total-columns, from = $from-direction, style = $container-style)
  from = unquote(from)
  if _prefix
    prefix(_prefix, context, from, style)

  if _suffix
    suffix(_suffix, context, from, style)

// Bleed into colums with margin/padding on any side of an element.
// $width   : The side of the bleed.
//          : Any unit-length will be used directly.
//          : Any unitless number will be used as a column-count.
//          : Use "2 of 6" format to represent 2 cals in a 6-col nested context.
// $sides   : One or more sides to bleed [ top | right | bottom | left | all ].
// $style   : The container style to use.
bleed(width = $grid-padding, sides = 'left right', style = $container-style)
  box-sizing: content-box

  if typeof(width) == 'list'
    width = filter(width, 'of')
    width = space(nth(width,1), nth(width,2), style)
  else if unitless(width)
    width = space(width, $total-columns, style)

  if sides == 'all' {
    margin: -(width)
    padding: width
  else
    for side in sides
      margin-{side}: -(width)
      padding-{side}: width
