button-reset()
  reset-box-model()
  reset-font()
  background transparent

text-field(height)
  background white
  border-radius floor(height * 0.5)
  border-right none
  border-top 1px solid #6484ad
  border-left 1px solid #6484ad
  border-bottom 1px solid #83a3cb
  box-shadow inset 0 1px 1px #888

image-background(path, scale=1.0)
  background-image url(path)
  background-size image-width(path, scale) image-height(path, scale)

image-element(path)
  width image-width(path)
  height image-height(path)
  image-background(path)

image-overlay(path, topPercent = 50%)
  position absolute
  image-element(path)
  top topPercent
  left 50%
  margin-top (- image-height(path) / 2)
  margin-left (- image-width(path) / 2)
  z-index 100

// Allows for buttons that consist of an image overlaid over another background such as a gradient
image-button(path, specifyHeight = true)
  at-text()
  width image-width(path)
  height image-width(path)  if specifyHeight
  box-sizing content-box
  position relative

  &:after
    content " "
    display block
    position absolute
    top 0
    left 0
    height 100%
    width 100%
    background no-repeat center
    image-background(path)

button-icon(path)
  &:after
    content " "
    display block
    margin 0 auto
    width image-width(path)
    min-height image-height(path)
    height 100%
    background no-repeat center center
    image-background(path)

active-tap-highlight(radius=false, isAfter=true)
  position relative

  if isAfter
    &:after
      content ""
      display block
      position absolute
      top 0
      right 0
      width 100%
      height 100%
      background-color $tapHighlightColor
      border-radius inherit

  else
    &:before
      content ""
      display block
      position absolute
      top 0
      left 0
      width 100%
      height 100%
      background-color $tapHighlightColor
      border-radius inherit

after-image(path)
  position relative
  padding-right $contentPadding + image-width(path)

  &:after
    content " "
    display block
    position absolute
    top 0
    right $contentPadding
    width image-width(path)
    height 100%
    background no-repeat right center
    image-background(path)

before-image(path, height=100%, top=0, scale=1.0)
  position relative
  padding-left (image-width(path, scale) + 2*$contentPadding)

  &:before
    content " "
    display block
    position absolute
    top top
    left $contentPadding
    width image-width(path, scale)
    height height*scale
    background no-repeat left center
    image-background(path, scale)

border-bottom-radius(radius)
  if $android
    border-bottom-left-radius radius
    border-bottom-right-radius radius
  else
    border-radius radius

flex-vertical-center()
  display-flex-box()
  box-orient vertical
  box-pack center

at-text()
  color transparent !important  /* Lazy hammer! Make sure that any other styles do not override */
  text-shadow none
  white-space nowrap
  line-height 0
  font-size 1px
  overflow hidden

off-left()
  position absolute
  top -1px
  height 1px
  width 1px
  at-text()

clearfix()
  &:before
  &:after
    content: ""
    display: block
  &:after
    clear: both
item-divider()
  margin 0
  border-top $dividerBorder unless $ipad
  padding $itemPadding

  unless $ipad
    &:first-child
      border-top none

set-tap-highlight()
  tap-highlight-color rgba(128, 128, 128, 0.5)

  if $web  // Full screen is only used in web.
    // Disable tap highlight under android if we have a scrim.
    .android > .flex &
      tap-highlight-color rgba(255,255,255,0)

clear-tap-highlight(androidSucks=false)
  // Android MUST be transparent white. Anything else fails to blow away the focus box
  if !androidSucks or $android
    tap-highlight-color rgba(255,255,255,0)
  else
    .android &
      tap-highlight-color rgba(255,255,255,0)


fix-touch-scrolling()
  // This is required to work around a bug that occurs when maps is hit on iOS devices.
  // If this is not applied the contents of the the touch overflow scrolling section the
  // content will be clipped on scroll
  //
  // http://stackoverflow.com/questions/7808110/css3-property-webkit-overflow-scrollingtouch-error
  // http://stackoverflow.com/a/7893031/238459
  transform translate3d(0, 0, 0)

overflow-ellipsis()
  white-space nowrap
  overflow hidden
  text-overflow ellipsis


gradient-border()
  &:before
    content ''
    display block
    height 1px
    margin-bottom $contentPadding
    border none
    background-image linear-gradient(left, #efefef, #ccc 50%, #efefef)

// Derived from with http://cssarrowplease.com/
bottom-arrow(width, border-width, background-color, color)
  position relative
  background background-color
  border border-width solid color
  color color

  &:after
  &:before
    top 100%
    border solid transparent
    content " "
    height 0
    width 0
    position absolute
    pointer-events none

  &:after
    border-color rgba(background-color, 0)
    border-top-color background-color
    border-width width
    left 50%
    margin-left -(width)

  &:before
    arrowWidth = width + round(border-width * 1.41421356) // cos(PI/4) * 2

    border-color rgba(color, 0)
    border-top-color color
    border-width arrowWidth
    left 50%
    margin-left -(arrowWidth)

horiz-stripe()
  color $strongColor
  background-color lighten($darkBack, 25%)
  padding 6px 0 6px $contentPadding
  border-top 1px solid darken($darkBack, 2%)
  border-bottom 1px solid darken($darkBack, 2%)
